dialogue type : b.x
C :  Yeah .

dialogue type : fg
C :  OK .

dialogue type : fh
C :  And

dialogue type : fh
C :  um

dialogue type : s
C :  so I 've been looking at Avendano 's work

dialogue type : fh
C :  and um

dialogue type : s^cc
C :  uh I 'll try to write up in my next stat status report a nice description of what he 's doing ,

dialogue type : s^e
C :  but it 's it 's an approach to deal with reverberation or that the aspect of his work that I 'm interested in

dialogue type : s
C :  the idea is that um normally an analysis frames are um too short to encompass reverberation effects um in full .

dialogue type : s
C :  You miss most of the reverberation tail in a ten millisecond window

dialogue type : s
C :  and so you you 'd like it to be that um the reverberation responses um simply convolved um in ,

dialogue type : fh|s
C :  but it 's not really with these ten millisecond frames

dialogue type : s.%--
C :  cuz you j

dialogue type : s.%--
C : 

dialogue type : s^fa
C :  I 'm sorry

dialogue type : s^bsc
C :  a two second window

dialogue type : s
C :  then in a room like this , most of the reverberation response is included in the window

dialogue type : s
C :  and the then it um then things are l more linear .

dialogue type : s
C :  It is it is more like the reverberation response is simply c convolved

dialogue type : fh|s.%--
C :  and um and you can use channel normalization techniques like

dialogue type : s
C :  uh in his thesis he 's assuming that the reverberation response is fixed .

dialogue type : s
C :  He just does um mean subtraction ,

dialogue type : s^e
C :  which is like removing the DC component of the modulation spectrum

dialogue type : fh|s
C :  and that 's supposed to d um deal uh deal pretty well with the um reverberation

dialogue type : fh|s
C :  and um the neat thing is you can't take these two second frames and feed them to a speech recognizer

dialogue type : fh|s
C :  um so he does this um method training trading the um the spectral resolution for time resolution and um come ca uh synthesizes a new representation which is with say ten second frames but a lower s um frequency resolution .

dialogue type : s^no
C :  So I don't really know the theory .

dialogue type : s
C :  I guess it 's these are called " time frequency representations "

dialogue type : s
C :  and h he 's making the the time sh um finer grained and the frequency resolution um less fine grained .

dialogue type : s^cc
C :  s so I 'm I guess my first stab actually in continuing his work is to um re - implement this this thing which um changes the time and frequency resolutions

dialogue type : s^df
C :  cuz he doesn't have code for me .

dialogue type : s^cc
C :  So that that 'll take some reading about the theory .

dialogue type : s^no
C :  I don't really know the theory .

dialogue type : fh|s.%--
C :  Oh , and um , another f first step is

dialogue type : fh
C :  um ,

dialogue type : s^cc
C :  so the the way I want to extend his work is make it able to deal with a time varying reverberation response

dialogue type : fh
C :  um and um

dialogue type : s
C :  we don't really know how fast the um the reverberation response is varying the Meeting Recorder data

dialogue type : fh|s
C :  um so um we we have this um block least squares um imp echo canceller implementation

dialogue type : fh|s^cc
C :  and um I want to try finding the the response , say , between a near mike and the table mike for someone using the echo canceller

dialogue type : s^cc
C :  and looking at the echo canceller taps and then see how fast that varies from block to block .

dialogue type : s
C :  That should give an idea of how fast the reverberation response is changing .

dialogue type : fg
C :  Um .

dialogue type : fg
C :  S so um

dialogue type : s
C :  y you do I think you read some of the the zeros as O 's and some as zeros .

dialogue type : qy^rt
C :  Is there a particular way we 're supposed to read them ?

dialogue type : s^bk
C :  Alright .

dialogue type : s^bk
C :  OK .

dialogue type : fg
C :  OK .

dialogue type : qy^rt
C :  Is this a change from the last batch of of um forms ?

dialogue type : s^df
C :  Because in the last batch it was spelled out which one you should read .

dialogue type : s^bk
C :  Oh . OK .

dialogue type : s^bk
C :  OK .

dialogue type : b
C :  OK .

