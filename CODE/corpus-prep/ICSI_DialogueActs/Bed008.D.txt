dialogue type : s^t3
D :  That 's funny .

dialogue type : s^aa|s^na
D :  Yeah , I looked at some of that stuff .

dialogue type : qw^bu^rt
D :  Which one ?

dialogue type : b
D :  Hmm .

dialogue type : qy^bu^rt
D :  Is this like a number that represents how much money they have left to spend ?

dialogue type : s^bk|qw
D :  OK , h well I mean how is it different from user finance ?

dialogue type : s^bk
D :  Alright .

dialogue type : s^aa
D :  Yeah .

dialogue type : s
D :  Well , I mean you 've written in you 've written in what uh seems to be required

dialogue type : qw^rt
D :  like what else is is do you want ?

dialogue type : s
D :  The other thing is that um every time that 's updated beliefs will have to be propagated

dialogue type : qr
D :  but then the question is do you do we wanna propagate beliefs every single time it 's updated or only when we need to ?

dialogue type : h
D :  Uh

dialogue type : s
D :  Well , I mean , in Srini 's thing there was this thing there was this um option like proper inferences which suggests that uh doesn't happen , automatically .

dialogue type : fg
D :  Well

dialogue type : %--
D :  Is

dialogue type : b
D :  hmm

dialogue type : qy^bu^d^rt
D :  So it 's true or false ?

dialogue type : fg
D :  So

dialogue type : s^na
D :  I thought mode ,

dialogue type : fh
D :  yeah .

dialogue type : qy^2^bu^d^rt
D :  Mode of transportation ?

dialogue type : s^bk
D :  OK .

dialogue type : s
D :  Also true or false .

dialogue type : s^bk
D :  Yeah , OK .

dialogue type : b
D :  Yeah .

dialogue type : s
D :  Well some of those are subsumed by approach .

dialogue type : s^aa
D :  Oh yes .

dialogue type : s
D :  Like they 're either true or false

dialogue type : s.%--
D :  and they uh

dialogue type : s^bk
D :  oh I see .

dialogue type : qo^d.%--
D :  Therefore

dialogue type : s^nd
D :  uh I was thinking less likely to view

dialogue type : b
D :  Right .

dialogue type : qy^rt
D :  What ex um and so either those is true f or false ?

dialogue type : fh
D :  So

dialogue type : s^bk
D :  OK .

dialogue type : b
D :  Yeah .

dialogue type : s^bk
D :  OK .

dialogue type : qy^cs^rt
D :  So you just wanna have them all pointing to a summary thing ?

dialogue type : %-
D :  T

dialogue type : fg|qw^rt
D :  Um what does the underscore - T at the end of each of those things signify ?

dialogue type : b
D :  Uh - huh .

dialogue type : s^bk
D :  OK .

dialogue type : s^bk^r
D :  OK .

dialogue type : s
D :  That also points to entity type I guess .

dialogue type : qy^bu^d^rt
D :  Oh you mean level of interest ?

dialogue type : s^bk
D :  Oh I see ,

dialogue type : b
D :  right .

dialogue type : qw^rt.%--
D :  So why is it

dialogue type : qy^bu^d^rt
D :  oh it , so it 's like a vector of five hundred one 's or zero 's ?

dialogue type : qy^bu:qy^d
D :  Like for each thing are we are you interested in it or not ?

dialogue type : s^bk
D :  I see .

dialogue type : s
D :  Budget .

dialogue type : fg
D :  Well

dialogue type : s^aa
D :  Right .

dialogue type : b
D :  Right .

dialogue type : s^nd
D :  No but , it 's more than that ,

dialogue type : s^e
D :  like the the more sort of you break it up

dialogue type : s^df
D :  like because if you have everything pointing to one node it 's like exponential

dialogue type : s
D :  whereas if you like keep breaking it up more and more it 's not exponential anymore .

dialogue type : s^aa
D :  Yeah .

dialogue type : s^aa
D :  Right .

dialogue type : b
D :  Right .

dialogue type : b
D :  Yeah .

dialogue type : s:s
D :  Situation Go - there ,

dialogue type : s^e
D :  I mean , because it 's whether it 's open or not .

dialogue type : s
D :  That definitely interes

dialogue type : s.%--
D :  But that now that kind of

dialogue type : fh|qh
D :  um what 's the word

dialogue type : fh|s
D :  um the that interacts with the uh EVA thing

dialogue type : s
D :  if they just wanna view it then it 's fine to go there when it 's closed

dialogue type : s.%-
D :  whereas if they want to um

dialogue type : fh
D :  so

dialogue type : s^2
D :  The time of day ,

dialogue type : qy^d^g^rt
D :  right

dialogue type : s^aa
D :  I well , right .

dialogue type : s^aa
D :  Right .

dialogue type : fg
D :  So

dialogue type : s
D :  yeah , that 's what I said

dialogue type : s
D :  just having one situational node may not be enough

dialogue type : s^df.%-
D :  because this that node by itself wouldn't distinguish

dialogue type : s:s
D :  Yeah , I mean , see I 'm I 'm thinking that any node that begins with " Go - there " is either gonna be true or false .

dialogue type : s^2
D :  Like situation traffic and so on .

dialogue type : s^2.%-
D :  I guess the final

dialogue type : b
D :  Yeah .

dialogue type : b
D :  Mmm .

dialogue type : s^cs^rt:s
D :  Maybe we could um have intermediate node that just the Endpoint and the Go - there S node sort of fed into ?

dialogue type : s^bk
D :  Right .

dialogue type : s^df
D :  Because that 's what we , I mean that 's why this situation comes up .

dialogue type : s^aa
D :  Yeah , right .

dialogue type : s^aa
D :  Yes .

dialogue type : s
D :  It things don't converge , yeah .

dialogue type : b
D :  Yeah .

dialogue type : s^bk
D :  Yeah .

dialogue type : fg|s
D :  Well , but the good thing is we we could have loopy belief propagation which we all love .

dialogue type : b
D :  Yeah .

dialogue type : b
D :  Yeah .

dialogue type : b
D :  Mmm yeah .

dialogue type : fg|s
D :  Yeah , I mean you need actually three to the five

dialogue type : s^df^rt
D :  because uh well I mean if if it has four inputs and then it itself has three values

dialogue type : fh
D :  so

dialogue type : s
D :  I mean it can get big fast .

dialogue type : s^nd
D :  No it still has three ,

dialogue type : s^df^e
D :  EVA .

dialogue type : s.%--
D :  This and also , I mean , the other places where ,

dialogue type : s
D :  like for example consider endpoint view , it has inputs coming from user budget , user thrift

dialogue type : s.%--
D :  so even

dialogue type : b
D :  Right .

dialogue type : qy^bu^d^rt
D :  HTML ?

dialogue type : s^bk
D :  OK .

dialogue type : b
D :  Yeah .

dialogue type : fg|s
D :  Yeah , I I mean , it might soon , if this is gonna be used in a serious way like java base then it might soon be necessary to uh start modifying it for our purposes .

dialogue type : %-
D :  So

dialogue type : x
D :  Ah , sorry .

dialogue type : s.%-
D :  I guess that 's

dialogue type : s
D :  Yeah , it 's right , I guess I can do that .

dialogue type : s^ba^t1
D :  I guess this board works fine .

dialogue type : s
D :  So um recall the basic problem which is that um you have a belief - net and you have like a lot of different nodes all contributing to one node .

dialogue type : qy^d^f^g^rt
D :  Right ?

dialogue type : s
D :  So as we discussed specifying this kind of thing is a big pain

dialogue type : s
D :  and it 's so will take a long time to write down

dialogue type : s^df
D :  because for example if these S have three possibilities each and this has three possibilities then you know you have two hundred and forty - three possibilities

dialogue type : s
D :  which is already a lot of numbers to write down .

dialogue type : s
D :  So what um helps us in our situation is that these all have values in the same set ,

dialogue type : qy^d^f^g^rt
D :  right ?

dialogue type : s
D :  These are all like saying EV or A ,

dialogue type : qy^d^f^g^rt
D :  right ?

dialogue type : s.%--
D :  So it 's not just a generalized situation like

dialogue type : s.%--
D : 

dialogue type : s
D :  we wanna view each of these as experts

dialogue type : s
D :  ea who are each of them is making a decision based on some factors

dialogue type : s
D :  and we wanna sort of combine their decisions

dialogue type : s
D :  and create you know , um sorta weighted combination .

dialogue type : qw^br^d^rt
D :  The what decision ?

dialogue type : s^aa
D :  Yeah .

dialogue type : b
D :  Yeah .

dialogue type : s
D :  So the problem is to specify the uh so the conditional property of this given all those ,

dialogue type : qy^d^f^g^rt
D :  right ?

dialogue type : s
D :  That 's the way belief - nets are defined ,

dialogue type : s^e
D :  like each node given its parents ,

dialogue type : qy^d^f^g^rt
D :  right ?

dialogue type : fh|s
D :  So um that 's what we want ,

dialogue type : s.%--
D :  we want for example P of um

dialogue type : s
D :  let 's call this guy Y

dialogue type : s
D :  and let 's call these X - one , X - two XN ,

dialogue type : qy^d^f^g^rt
D :  right .

dialogue type : s
D :  So we want probability that Y equals , you know , for example um E

dialogue type : s.%--
D :  given that these guys are

dialogue type : s
D :  I 'll just refer to this as like X um hat or something ,

dialogue type : s^rt
D :  uh the co like all of them ?

dialogue type : s
D :  Given that for example the data says you know , A , V , A , E , or something

dialogue type : qy^bu^d^f^g^rt
D :  right ?

dialogue type : s
D :  So we would like to do this kind of combination .

dialogue type : b
D :  Right .

dialogue type : fh
D :  So , right .

dialogue type : s
D :  So Basically um what we don't wanna do is to for every single combination of E and V and A and every single letter E , s give a number

dialogue type : s
D :  because that 's obviously not desirable .

dialogue type : s
D :  What we wanna do is find some principled way of um saying what each of these is

dialogue type : s
D :  and we want it to be a valid probability distribution ,

dialogue type : s
D :  so we want it to um add up to one ,

dialogue type : qy^d^f^g^rt
D :  right ?

dialogue type : s
D :  So those are the two things that we uh need .

dialogue type : s
D :  So what uh I guess , what Jerry suggested earlier was basically that we , you know view these guys as voting

dialogue type : s
D :  and we just take the uh we essentially take um averages ,

dialogue type : qy^d^f^g^rt
D :  right ?

dialogue type : s
D :  So for example here two people have voted for A ,

dialogue type : s
D :  one has voted for V ,

dialogue type : s
D :  and one has voted for E ,

dialogue type : s^rt
D :  so we could say that the probabilities are , you know , probability of being E is one over four , because one person voted for E out of four

dialogue type : s.%--
D :  and similarly , probability of

dialogue type : s^rt
D :  so this is probability of E

dialogue type : s^rt
D :  s and then probability of A given all that is um two out of four

dialogue type : s
D :  and probability of V is one out of four .

dialogue type : qy^d^f^g^rt
D :  Right ?

dialogue type : s
D :  So that 's step that 's the uh yeah that 's the that 's the basic uh thing .

dialogue type : %-
D :  Now

dialogue type : qy
D :  Is that all OK ?

dialogue type : b
D :  Yeah .

dialogue type : b
D :  Yeah .

dialogue type : b
D :  Yeah .

dialogue type : s.%--
D :  So step two is um

dialogue type : fh
D :  right .

dialogue type : s
D :  So we 've assumed equal weights

dialogue type : s.%--
D :  whereas it might turn out that you know , some w be that for example , what the um the actual the uh verbal content of what the person said , like what uh what might be uh somehow more uh important than the uh

dialogue type : s^aa
D :  Right .

dialogue type : s^aa|s
D :  Sure , so we don't wanna like give them all equal weight

dialogue type : s
D :  so currently we 've been giving them all weight one fourth

dialogue type : s
D :  so we could replace this by uh W - one , W - two , W - three , and W - four

dialogue type : qy^d^f^g^rt
D :  right ?

dialogue type : s^rt
D :  And in order for this to be a valid probability distribution for each um X - hat , we just need that the W 's sum to one .

dialogue type : s.%--
D :  So they can be for example , you know

dialogue type : s
D :  you you could have point one , point three , point two , and point four , say .

dialogue type : s^m
D :  And that 'd be one .

dialogue type : s^ba
D :  So that um also seems to work fine .

dialogue type : %-
D :  And uh

dialogue type : s^na
D :  You 'd compute the weighted average ,

dialogue type : s.%-
D :  so the probability of E would be uh

dialogue type : s^ar^m
D :  Not one quarter ,

dialogue type : s
D :  so these numbers have been replaced with point one , point three , point two , and point four .

dialogue type : s
D :  So you can view these as gone .

dialogue type : s.%--
D :  Probability of

dialogue type : b
D :  Yeah .

dialogue type : b
D :  Yeah .

dialogue type : b
D :  OK .

dialogue type : fg
D :  So ,

dialogue type : s^bk
D :  alright .

dialogue type : s
D :  So this is uh step two .

dialogue type : s
D :  So the next possibility is that um we 've given just a single weight to each expert ,

dialogue type : qy^d^f^g^rt
D :  right ,

dialogue type : s
D :  whereas it might be the case that um in certain situations one of the experts is more uh reliable and in certain situations the other expert is more reliable .

dialogue type : s^rt
D :  So the way this is handled is by what 's called a mixture of experts ,

dialogue type : s.%--
D :  so what you can have is

dialogue type : s
D :  you augment these diagrams like this

dialogue type : fh
D :  so

dialogue type : s
D :  you have a new thing called " H " ,

dialogue type : qy^d^f^g^rt
D :  OK ?

dialogue type : s
D :  This is a hidden variable .

dialogue type : s
D :  And what this is is it gets its input from X - one , X - two , X - three , and X - four ,

dialogue type : s
D :  and what it does is it decides which of the experts is to be trusted in this particular situation .

dialogue type : qy^d^f^g^rt
D :  Right ?

dialogue type : s
D :  And then these guys all come here .

dialogue type : s^bk.%
D :  OK .

dialogue type : s^ba
D :  So this is sightly uh more complicated .

dialogue type : s
D :  So what 's going on is that um this H node looks at these four values of those guys

dialogue type : qw
D :  and it decides in given these values which of these isn't likely to be more reliable or most reliable .

dialogue type : s
D :  So H produces some you know , it produces a number ,

dialogue type : s
D :  either one , two , three , or four , in our situation ,

dialogue type : qy^d^f^g^rt
D :  right ?

dialogue type : s
D :  Now this guy he looks at the value of H

dialogue type : s
D :  say it 's two ,

dialogue type : s
D :  and then he just selects the uh thing .

dialogue type : s
D :  That 's all there is to say , I guess about it .

dialogue type : s^bk|s.%-
D :  Right , so you can have a mixture that

dialogue type : s^bk
D :  Right .

dialogue type : b
D :  Yeah .

dialogue type : b
D :  Yeah .

dialogue type : s^aap
D :  It could .

dialogue type : fg|s
D :  Yeah , it could

dialogue type : s^fa
D :  Sorry ?

dialogue type : s^aa|s.%-
D :  Right , so I mean the way you desc

dialogue type : s^bk|s
D :  Yeah , well could be things like if X - two and X - three say yes then i ignore X - one also .

dialogue type : b
D :  Yeah .

dialogue type : b
D :  Yeah .

dialogue type : s^bk
D :  Yes .

dialogue type : b
D :  Yeah .

dialogue type : fg|s^df
D :  Um Well , I mean to learn them we need data ,

dialogue type : qh^df^ng
D :  where are we gonna get data ?

dialogue type : s
D :  Well I mean we need data with people intentions ,

dialogue type : qy^d^f^g
D :  right ?

dialogue type : s^ba
D :  Which is slightly tricky .

dialogue type : b
D :  Right .

dialogue type : b
D :  Mm - hmm .

dialogue type : qw
D :  But what 's the data about

dialogue type : qy^e^rt
D :  like , are we able to get these nodes from the data ?

dialogue type : b
D :  Yeah .

dialogue type : s^bk|s
D :  Yeah , but that 's my question ,

dialogue type : qw
D :  like how do we I mean , how do we have data about something like um um endpoint sub - E ,

dialogue type : qrr
D :  or endpoint sub uh you know s S ?

dialogue type : b
D :  Mmm .

dialogue type : b
D :  Mmm .

dialogue type : s^bu
D :  So this is what we wanna learn .

dialogue type : s^aa
D :  Yep .

dialogue type : b
D :  Right .

dialogue type : b
D :  Hmm .

dialogue type : b
D :  Yeah .

dialogue type : s^nd.%--
D :  I don't think ,

dialogue type : s.%--
D : 

dialogue type : qy^rt
D :  can you bring up the function thing ?

dialogue type : fh|qw.%-
D :  Um w where is the thing that allows you to sort of

dialogue type : s
D :  Oh function properties ,

dialogue type : qy^rt
D :  is that it ?

dialogue type : s^ar
D :  Hmm , I guess not .

dialogue type : s^aa|s.%-
D :  Yeah , that 's

dialogue type : s^bk
D :  Right .

dialogue type : s^bk
D :  OK .

dialogue type : fg|s
D :  And um it so e either it 'll allow us to do everything

dialogue type : s^df
D :  which I think is unlikely ,

dialogue type : s
D :  I think more likely it 'll allow us to do very few of these things

dialogue type : s^cs
D :  and in that case we 'll have to um just write up little things that allow you to um create such CPU 's on your own in the java base format .

dialogue type : s^bk
D :  Yeah .

dialogue type : b
D :  Yeah .

dialogue type : fg|s
D :  Yeah , I was assuming that 's what we 'd always do

dialogue type : %-
D :  because

dialogue type : s^r
D :  yeah I was assuming that 's what we 'd always do ,

dialogue type : %--
D :  it 's

dialogue type : b
D :  Right .

dialogue type : b
D :  Yeah .

